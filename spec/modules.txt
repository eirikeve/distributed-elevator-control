// MODULES
////////////////////

Notation:
----------------
+ public var
- private var
x method



ElevEventHandler
================




ElevFSM
================




ElevDriver
================
x Init(addr, numfloors)
x SetMotorDirection(dir)
x SetButtonLamp(but, val)
x SetFloorIndicator(f)
x SetDoorOpenLamp(val)
x SetStopLamp(val)
x PollButtons(recvchan, event)
x PollFloorSensor(recvchan)
x PollStopButton(recvchan)
x PollObstructionSwitch(recvchan)
x getButton(btn, f)
x getFloor()
x getStop()
x getObstruction()
x toByte(a)
x toBool(a)

ElevTimer
================


ElevQueue
================




ElevLog
================




ElevNetworkHandler
================



ElevOrderEvaluation
================
x ComputeCost(order, states) returns array of cost for each elevator
Foreach elevator e:
	Place order in copy of e.queue using algorithm
	return place
x Delegate(order, states, exclude) return which elevator to delegate to
compute the cost of each elevator
exclude those marked in exclude
if two elevators have order in same queue place:
	choose elevator in closest floor
	if same floors:
		choose randomly

	





ElevNetworkState
================
+ list of connected elevators
+ orderMatrices (in dict)
+ stateMatrices (in dict)




ElevComm
================
x toJson(var)
x fromJson(var)
x 



ElevHeartBeat
================



